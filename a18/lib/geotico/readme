1. folders
2. html
3. minify stif
4. stif: publisher
5. stif: adding wms overlays
6. stif: adding base layers
7. stif: configuration

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1. folders:
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# config: contains stif's configurable files
- layers.xml: define wms layers in addition to commercial maps; baselayers and map overlays are possible
- texts.json: define tooltip and other written texts language dependent

# css: stif's stylesheets (needs revision)
- Sti.css: standard (e4D) stylesheet
- customDesign.css: additional stylesheet for ddb usage

# images: stif's images (needs revision)
- includes standard e4D and custom ddb images

# js: stif's javascript sources
- folder 'sti' contains widgets and data structures of stif
- folder 'core' contains wrapper and gui components of stif
- folder 'build/loader' contains loader files for uncompressed and uncombined initialization
- folder 'build/minifier' contains additional js-files for compressed/combined initialization

# lib: stif's additional libraries
- excanvas: ie<9 canvas support
- jquery
- openlayers: for map widget
- simile: ajax/timeline/timeplot for time widget
- slider: used for map's zoom slider

# minify: used for combining/compressing all needed javascript sources into one

# test: example kml-files for test purposes


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2. html:
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# map.html: uses minified javascript source

# map_debug.html: uses loader mechanism to initialize stif with seperate javascript sources
                  (for easier debugging)


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
3. minify stif:
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

requires 'rake' (Ruby make: http://rake.rubyforge.org/)
cmd: go into minify dir
run 'rake default' or 'rake all' to compress and minify sources


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
4. stif: publisher
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

- a publish/subscribe mechanism is given in js/core/Publisher.js

- subscribe for a specific topic:

    var subscriptionId = Publisher.Subscribe("RegisterTest", 
        function(data) {
            console.log('Test: ' +data);
        }
    );

- publish a specific topic:

    Publisher.Publish("RegisterTest", data);

- unsubscribe:

    Publisher.Unsubscribe("RegisterTest", subscriptionId);

- stif's publisher usage for initialization:

    when all required js sources are loaded, a 'StifReady' event is published
    --> for instant start of any function afterwards, register via:

	Publisher.Subscribe( 'StifReady', function(){ ... } );

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
5. stif: adding wms overlays
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

- define an array of JSON objects for the given wms overlays
- required attributes are name of the layer, server url and corresponding layer identifier
- example:

	var layers = [{
		name: "Neighborhoods",
		url: "http://demo.cubewerx.com/demo/cubeserv/cubeserv.cgi?",
    		layer: "Foundation.GTOPO30"
	},{
		name: "Nexrad",
		url: "http://mesonet.agron.iastate.edu/cgi-bin/wms/nexrad/n0r-t.cgi?",
		layer: "nexrad-n0r-wmst"
	}];

- to add the wms overlays to STIMap call 'setOverlays(layers)'
- 'setOverlays()' will remove all wms overlays

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
6. stif: adding base layers
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

- to add base layers call:

	gui.map.addBaseLayer(new OpenLayers.Layer.WMS("OpenLayers WMS","http://vmap0.tiles.osgeo.org/wms/vmap0",{layers: "basic"}));
	gui.setMapsDropdown();

- the first line will add your predefined base layer
- the second line will update the dropdown list

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
7. stif: configuration
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

- STIStatic has a default configuration. To apply individual settings, you can call:

	STIStatic.applySettings(settings);

- The following example will overwrite the defaults of STIStatic.countrySelect and STIStatic.squareSelect:

	STIStatic.applySettings({
		countrySelect: false,
		squareSelect: false
	});
	
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
8. stif: Bbox control
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

- STIStatic has a showBBox option, to show or hide the button on the stif toolbar. Default is false

	To activate the bbox control call the SpaceWrapper function showBboxControl with an Array of Bounds ([xmin, ymin, xmax, ymax] in EPSG:4326)
	To deactivate the bbox control call the SpaceWrapper function with an empty Array
	Example:
	  SpaceWrapper.showBboxControl ([-26,34,54,63]);
	