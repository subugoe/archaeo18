<project name="Archaeo18 Test" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant" default="jetty.start"
  xmlns:artifact="antlib:org.apache.maven.artifact.ant">
  <!--
Usage:
svn co https://develop.sub.uni-goettingen.de/repos/ent/archaeo18/branches/archaeo18
cd archaeo18
ant
-->
  <!-- Jetty settings -->
  <property name="jetty.port" value="8080"/>

  <!-- directory for the build system -->
  <property name="lib.dir" value="./lib"/>
  <property name="target.dir" value="./target"/>
  <property name="lib.build.dir" value="${lib.dir}/build"/>
  <property name="lib.jetty.dir" value="${lib.dir}/jetty"/>
  <property name="jetty.dir.tmp" value="./tmp"/>
  <!-- Ivy stuff -->
  <property name="ivy.install.version" value="2.2.0"/>
  <property name="ivy.jar.file" value="${lib.build.dir}/ivy-${ivy.install.version}.jar"/>
  <property name="ivy.download.url"
    value="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"/>

  <!-- Maven stuff -->
  <property name="maven.install.version" value="2.1.3"/>
  <property name="maven.jar.file"
    value="${lib.build.dir}/maven-ant-tasks-${maven.install.version}.jar"/>
  <property name="maven.download.url"
    value="http://repo1.maven.org/maven2/org/apache/maven/maven-ant-tasks/${maven.install.version}/maven-ant-tasks-${maven.install.version}.jar"/>

  <!-- Servlet configuration -->
  <property name="servlet.archaeo18.webxml" value="./WEB-INF/web.xml"/>
  <property name="servlet.proxy.webxml" value="./testdata/proxy/WEB-INF/web.xml"/>

  <!-- Test data -->
  <property name="test.dir" value="./testdata"/>
  <property name="data.download.dir.indices" value="${test.dir}/indices"/>

  <!-- Patches -->
  <property name="patch.dir" value="${test.dir}/patches"/>

  <!-- eXist Backend -->
  <property name="exist.base.url" value="http://134.76.21.92:8080"/>
  <property name="exist.queries.url" value="${exist.base.url}/exist/rest/db/archaeo18/queries"/>
  <property name="exist.entities.url"
    value="${exist.queries.url}/experimental/listEntities.xq?format=xhtml&amp;facet="/>

  <!-- Test data for the indices  page and their local names -->
  <property name="exist.entities.persName.url" value="${exist.entities.url}persName"/>
  <property name="exist.entities.placeName.url" value="${exist.entities.url}tei:placeName"/>
  <property name="exist.entities.term.url" value="${exist.entities.url}tei:term"/>
  <property name="exist.entities.bibl.url" value="${exist.entities.url}tei:bibl"/>
  <!-- local names -->
  <property name="exist.entities.persName.local"
    value="${data.download.dir.indices}/listEntities.xq$facet=tei:persName&amp;format=xhtml"/>
  <property name="exist.entities.placeName.local"
    value="${data.download.dir.indices}/listEntities.xq$facet=tei:placeName&amp;format=xhtml"/>
  <property name="exist.entities.term.local"
    value="${data.download.dir.indices}/listEntities.xq$facet=tei:term&amp;format=xhtml"/>
  <property name="exist.entities.bibl.local"
    value="${data.download.dir.indices}/listEntities.xq$facet=tei:bibl&amp;format=xhtml"/>

  <!-- JavaScript Stuff -->
  <property name="lib.envjs.download.url" value="http://github.com/thatcher/env-js/zipball/1.2.13"/>
  <property name="lib.envjs.dir" value="${lib.dir}/envjs"/>
  <property name="lib.envjs.local" value="${lib.envjs.dir}/env-js-1.2.1.zip"/>

  <!-- PHP stuff -->
  <property name="quercus.version" value="4.0.25"/>
  <property name="lib.quercus.dir" value="${lib.dir}/quercus"/>
  <property name="php.dir" value="."/>

  <!-- Ant contrib -->
  <property name="antcontrib.version" value="1.0b3"/>

  <!-- SASS stuff -->
  <property name="jruby.version" value="1.6.8"/>
  <property name="jgit.version" value="2.1.0.201209190230-r"/>
  <property name="sass.downlad.git.url" value="https://github.com/nex3/sass.git"/>
  <property name="lib.sass.dir" value="${lib.dir}/sass"/>
  <property name="lib.sass.lib.dir" value="${lib.dir}/sass-lib"/>
  <property name="sass.cmd" value="./lib/sass/bin/scss"/>
  <property name="css.dir" value="./css"/>

  <target name="init" depends="">
    <mkdir dir="${lib.dir}"/>
    <mkdir dir="${lib.build.dir}"/>
    <mkdir dir="${lib.jetty.dir}"/>
    <mkdir dir="${target.dir}"/>
    <!-- Created by git
    <mkdir dir="${lib.sass.dir}"/>
    -->
    <mkdir dir="${lib.sass.lib.dir}"/>
    <mkdir dir="${lib.quercus.dir}"/>
  </target>

  <target name="envjs.download" unless="skip.download" depends="init">
    <get src="${lib.envjs.download.url}" dest="${lib.envjs.local}" usetimestamp="true"/>
    <unzip src="${lib.envjs.local}" dest="${lib.envjs.dir}"/>
  </target>

  <target name="maven.download" unless="skip.download" depends="init">
    <echo message="Downloading and installing maven..."/>
    <get src="${maven.download.url}" dest="${maven.jar.file}" usetimestamp="true"/>
    <path id="maven.lib.path">
      <fileset dir="${lib.build.dir}" includes="*.jar"/>
    </path>
    <taskdef uri="antlib:org.apache.maven.artifact.ant"
      resource="org/apache/maven/artifact/ant/antlib.xml" classpathref="maven.lib.path"/>
  </target>

  <target name="jruby.download" depends="maven.download">
    <artifact:dependencies filesetId="jruby.local.classpath">
      <dependency groupId="org.jruby" artifactId="jruby-complete" version="${jruby.version}"/>
    </artifact:dependencies>
    <copy todir="${lib.sass.lib.dir}">
      <fileset refid="jruby.local.classpath"/>
      <mapper type="flatten"/>
    </copy>
  </target>

  <target name="jgit.download" depends="maven.download">
    <artifact:dependencies filesetId="jruby.local.classpath">
      <dependency groupId="org.eclipse.jgit" artifactId="org.eclipse.jgit.ant"
        version="${jgit.version}"/>
    </artifact:dependencies>
    <copy todir="${lib.sass.lib.dir}">
      <fileset refid="jruby.local.classpath"/>
      <mapper type="flatten"/>
    </copy>
    <path id="jgit.plugin.classpath">
      <fileset dir="${lib.sass.lib.dir}" includes="*.jar"/>
    </path>
    <taskdef resource="org/eclipse/jgit/ant/ant-tasks.properties"
      classpathref="jgit.plugin.classpath"/>
  </target>

  <!-- Ugly hack to check if Sass is alredy there -->
  <!-- See http://stackoverflow.com/questions/1163998/do-i-have-any-way-to-check-the-existence-of-a-directory-in-ant-not-a-file -->

  <target name="sass.dir.check">
    <condition property="sass.dir.exists">
      <available file="${lib.sass.dir}" type="dir"/>
    </condition>
  </target>

  <target name="sass.download" depends="sass.dir.check, jgit.download" unless="${sass.dir.exists}">
    <!-- see http://wiki.eclipse.org/JGit/User_Guide#Ant_Tasks -->
    <git-clone uri="${sass.downlad.git.url}" dest="${lib.sass.dir}"/>
  </target>

  <!-- This is need, since the class library of ruby isn't found, if started from jar file -->
  <target name="jruby.home" depends="jruby.download">
    <property name="jruby.home" value="${target.dir}/jruby.home"/>
    <mkdir dir="${jruby.home}"/>
    <!-- /META-INF/jruby.home/ -->
    <unzip dest="${jruby.home}">
      <patternset>
        <include name="META-INF/jruby.home/**/*.*"/>
      </patternset>
      <fileset dir="${lib.sass.lib.dir}">
        <include name="jruby-complete-*.jar"/>
      </fileset>
      <!-- See http://ant.apache.org/manual/Types/mapper.html -->
      <cutdirsmapper dirs="2"/>
    </unzip>
  </target>
  
  <target name="sass.check.gem" depends="jruby.home">
    <!-- Process returns 0 if sass is installed, 1 otherwise -->
    <java classname="org.jruby.Main" fork="true" dir="." failonerror="false" resultproperty="sass.check.gem.result">
      <sysproperty key="jruby.home" value="${jruby.home}"/>
      <classpath>
        <fileset dir="${lib.sass.lib.dir}" includes="*.jar"/>
      </classpath>
      <arg value="-e"/>
      <arg value="require 'rubygems'"/>
      <arg value="-e"/>
      <arg value="Gem::Specification.find_by_name('sass').nil? ? abort : exit"/>
      <arg value=""/>
    </java>
  </target>

  <target name="sass.download.gem" depends="jruby.home">
    <java classname="org.jruby.Main" fork="true" dir=".">
      <sysproperty key="jruby.home" value="${jruby.home}"/>
      <classpath>
        <fileset dir="${lib.sass.lib.dir}" includes="*.jar"/>
      </classpath>
      <arg value="-S"/>
      <arg value="gem"/>
      <arg value="install"/>
      <arg value="sass"/>
    </java>
  </target>

  <target name="antcontrib.download" depends="init">
    <artifact:dependencies filesetId="antcontrib.local.classpath">
      <dependency groupId="ant-contrib" artifactId="ant-contrib" version="${antcontrib.version}"/>
    </artifact:dependencies>
    <copy todir="${lib.sass.lib.dir}">
      <fileset refid="antcontrib.local.classpath"/>
      <mapper type="flatten"/>
    </copy>
    <path id="antcontrib.plugin.classpath">
      <fileset dir="${lib.sass.lib.dir}" includes="*.jar"/>
    </path>
    <taskdef resource="net/sf/antcontrib/antcontrib.properties"
      classpathref="antcontrib.plugin.classpath"/>
  </target>

  <target name="jetty.download" depends="maven.download">
    <artifact:dependencies filesetId="jetty.local.classpath">
      <dependency groupId="org.mortbay.jetty" artifactId="jetty-ant" version="7.6.0.v20120127"/>
      <dependency groupId="org.tuckey" artifactId="urlrewritefilter" version="4.0.3"/>
      <dependency groupId="commons-httpclient" artifactId="commons-httpclient" version="3.1"/>
    </artifact:dependencies>
    <copy todir="${lib.jetty.dir}">
      <fileset refid="jetty.local.classpath"/>
      <mapper type="flatten"/>
    </copy>
  </target>

  <target name="config.patch">
    <patch patchfile="${patch.dir}/indeces-local.patch"
      originalfile="./a18/lib/archaeo18/Archaeo18Properties.js"/>
  </target>

  <target name="jetty.install" depends="jetty.download">
    <path id="jetty.plugin.classpath">
      <fileset dir="${lib.jetty.dir}" includes="*.jar"/>
    </path>
    <taskdef classpathref="jetty.plugin.classpath" resource="tasks.properties"
      loaderref="jetty.loader"/>
    <typedef name="selectChannelConnector"
      classname="org.eclipse.jetty.server.nio.SelectChannelConnector"
      classpathref="jetty.plugin.classpath" loaderref="jetty.loader"/>
  </target>

  <target name="clean">
    <delete dir="${lib.dir}"/>
    <delete dir="${jetty.dir.tmp}"/>
    <delete dir="${target.dir}"/>
  </target>

  <target name="jetty.start" depends="jetty.install">
    <!-- 
    See http://docs.codehaus.org/display/JETTY/Ant+Jetty+Plugin for configuration
    For newer Versions
    http://www.eclipse.org/jetty/documentation/current/jetty-ant.html
    -->
    <echo>starting Jetty...</echo>
    <jetty tempDirectory="${jetty.dir.tmp}">
      <connectors>
        <selectChannelConnector port="${jetty.port}"/>
      </connectors>
      <webapp webXmlFile="${servlet.archaeo18.webxml}" contextPath="/archaeo18" name="archaeo18"
        warfile="."/>
      <webapp webXmlFile="${servlet.proxy.webxml}" contextPath="/" name="proxy"
        warfile="${test.dir}/proxy"/>
    </jetty>
  </target>

  <target name="data.download">
    <get src="${exist.entities.persName.url}" dest="${exist.entities.persName.local}"/>
    <get src="${exist.entities.placeName.url}" dest="${exist.entities.placeName.local}"/>
    <get src="${exist.entities.term.url}" dest="${exist.entities.term.local}"/>
    <get src="${exist.entities.bibl.url}" dest="${exist.entities.bibl.local}"/>
  </target>

  <target name="war.dependencies" depends="maven.download, init">
    <property name="war.dir" value="${target.dir}/webapp"/>
    <property name="war.dir.lib" value="${war.dir}/WEB-INF/lib"/>
    <mkdir dir=""/>

    <artifact:dependencies filesetId="war.classpath">
      <artifact:remoteRepository id="quercus" url="http://repository.threecrickets.com/maven/"/>
      <dependency groupId="org.tuckey" artifactId="urlrewritefilter" version="4.0.3"/>
      <dependency groupId="com.caucho" artifactId="quercus" version="${quercus.version}"/>
    </artifact:dependencies>
    <copy todir="${war.dir.lib}">
      <fileset refid="war.classpath"/>
      <mapper type="flatten"/>
    </copy>
  </target>

  <target name="scss.compile" depends="sass.download, jruby.download, antcontrib.download">
    <foreach target=".scss.compile" param="scss.file">
      <path>
        <fileset dir="${css.dir}" includes="**/*.scss" excludes="**/_*"/>
      </path>
    </foreach>
  </target>

  <target name="scss.compile.watch" depends="sass.download.gem">
    <java classname="org.jruby.Main" fork="true" dir="." spawn="true">
      <sysproperty key="jruby.home" value="${jruby.home}"/>
      <classpath>
        <fileset dir="${lib.sass.lib.dir}" includes="*.jar"/>
      </classpath>
      <arg value="-S"/>
      <arg value="sass"/>
      <arg value="--watch"/>
      <arg value="--poll"/>
      <arg value="${css.dir}:${css.dir}"/>
    </java>
  </target>

  <target name=".scss.compile">
    <propertyregex property="css.out" input="${scss.file}" regexp="(.*)\.scss" select="\1.css"
      casesensitive="false"/>
    <java classname="org.jruby.Main" fork="true" dir=".">
      <classpath>
        <fileset dir="${lib.sass.lib.dir}" includes="*.jar"/>
      </classpath>
      <!--
      <arg value="- -headless"/>
      -->
      <arg value="${sass.cmd}"/>
      <arg value="--trace"/>
      <arg value="--unix-newlines"/>
      <arg value="${scss.file}"/>
      <arg value="${css.out}"/>
    </java>
  </target>

  <target name="php.download" depends="maven.download">
    <artifact:dependencies filesetId="quercus.classpath">
      <artifact:remoteRepository id="quercus" url="http://repository.threecrickets.com/maven/"/>
      <dependency groupId="com.caucho" artifactId="quercus" version="${quercus.version}"/>
    </artifact:dependencies>
    <copy todir="${lib.quercus.dir}">
      <fileset refid="quercus.classpath"/>
      <mapper type="flatten"/>
    </copy>
    <path id="quercus.plugin.classpath">
      <fileset dir="${lib.quercus.dir}" includes="*.jar"/>
    </path>
  </target>

  <target name="php.compile" depends="php.download, jetty.install, antcontrib.download">
    <foreach target=".php.compile" param="php.file">
      <path>
        <fileset dir="${php.dir}" casesensitive="yes" includes="**/*.php"/>
      </path>
    </foreach>
  </target>

  <target name=".php.compile">
    <propertyregex property="php.out" input="${php.file}" regexp="(.*)\.php" select="\1.xhtml"
      casesensitive="false"/>
    <java classname="com.caucho.quercus.CliQuercus">
      <arg value="-f"/>
      <arg value="${php.file}"/>
      <classpath>
        <path refid="jetty.plugin.classpath"/>
        <path refid="quercus.plugin.classpath"/>
      </classpath>
    </java>
  </target>

  <target name="war" depends="war.dependencies"/>

  <target name="serve" depends="scss.compile.watch, jetty.start"/>

</project>
